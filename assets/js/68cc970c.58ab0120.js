"use strict";(self.webpackChunkhailaz_github_io=self.webpackChunkhailaz_github_io||[]).push([[3761],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function u(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?u(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},u=Object.keys(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var i=r.createContext({}),l=function(n){var e=r.useContext(i),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},p=function(n){var e=l(n.components);return r.createElement(i.Provider,{value:e},n.children)},f={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,u=n.originalType,i=n.parentName,p=c(n,["components","mdxType","originalType","parentName"]),s=l(t),m=o,g=s["".concat(i,".").concat(m)]||s[m]||f[m]||u;return t?r.createElement(g,a(a({ref:e},p),{},{components:t})):r.createElement(g,a({ref:e},p))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var u=t.length,a=new Array(u);a[0]=s;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=n,c.mdxType="string"==typeof n?n:o,a[1]=c;for(var l=2;l<u;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1366:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>f,frontMatter:()=>u,metadata:()=>c,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const u={layout:"post",title:"gorun"},a=void 0,c={unversionedId:"learn/go/\u793a\u4f8b/gorun",id:"learn/go/\u793a\u4f8b/gorun",title:"gorun",description:"\u9650\u5236 go run \u4e2a\u6570",source:"@site/docs/learn/go/\u793a\u4f8b/gorun.md",sourceDirName:"learn/go/\u793a\u4f8b",slug:"/learn/go/\u793a\u4f8b/gorun",permalink:"/docs/learn/go/\u793a\u4f8b/gorun",draft:!1,editUrl:"https://github.com/hailaz/hailaz.github.io/blob/master/docs/learn/go/\u793a\u4f8b/gorun.md",tags:[],version:"current",frontMatter:{layout:"post",title:"gorun"},sidebar:"learn",previous:{title:"\u603b\u7ed3",permalink:"/docs/learn/go/2"},next:{title:"goset",permalink:"/docs/learn/go/\u793a\u4f8b/goset"}},i={},l=[{value:"\u9650\u5236 go run \u4e2a\u6570",id:"\u9650\u5236-go-run-\u4e2a\u6570",level:3},{value:"V2",id:"v2",level:4},{value:"V1",id:"v1",level:4}],p={toc:l};function f(n){let{components:e,...t}=n;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"\u9650\u5236-go-run-\u4e2a\u6570"},"\u9650\u5236 go run \u4e2a\u6570"),(0,o.kt)("h4",{id:"v2"},"V2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type GoRun struct {\n    ch chan struct{}\n}\n\nfunc NewGoRun(maxRun int) *GoRun {\n    return &GoRun{ch: make(chan struct{}, maxRun)}\n}\nfunc (p *GoRun) Done() {\n    <-p.ch\n}\n\nfunc (p *GoRun) Count() int {\n    return len(p.ch)\n}\n\nfunc (p *GoRun) Max() int {\n    return cap(p.ch)\n}\n\nfunc (p *GoRun) Run(f func()) {\n    select {\n    case p.ch <- struct{}{}:\n        go func(f func()) {\n            defer p.Done()\n            f()\n        }(f)\n    default:\n        return\n    }\n}\n\nfunc T(){\n    p := NewGoRun(100)\n    for {\n        p.Run(func() {\n            rand.Seed(time.Now().UnixNano())\n            x := rand.Intn(p.max * 100) //\u751f\u62100-99\u968f\u673a\u6574\u6570\n            time.Sleep(time.Millisecond * time.Duration(x))\n        })\n        fmt.Println(p.Count())\n        time.Sleep(time.Millisecond * 100)\n    }\n}\n\nfunc main() {\n    go T()\n    for{}\n}\n")),(0,o.kt)("h4",{id:"v1"},"V1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type GoRun struct {\n    max   int\n    count int\n    sync.Mutex\n}\n\nfunc NewGoRun(max int) *GoRun {\n    return &GoRun{max: max}\n}\n\nfunc (p *GoRun) CanRun() bool {\n    p.Lock()\n    defer p.Unlock()\n    if p.count < p.max {\n        p.count++\n        return true\n    }\n    return false\n}\nfunc (p *GoRun) Done() {\n    p.Lock()\n    defer p.Unlock()\n    p.count--\n}\n\nfunc (p *GoRun) Count() int {\n    return p.count\n}\n\nfunc (p *GoRun) Run(f func()) {\n    if !p.CanRun() {\n        return\n    }\n    go func(f func()) {\n        defer p.Done()\n        f()\n    }(f)\n}\n\nfunc T(){\n    p := NewGoRun(100)\n    for {\n        p.Run(func() {\n            rand.Seed(time.Now().UnixNano())\n            x := rand.Intn(p.max * 100) //\u751f\u62100-99\u968f\u673a\u6574\u6570\n            time.Sleep(time.Millisecond * time.Duration(x))\n        })\n        fmt.Println(p.Count())\n        time.Sleep(time.Millisecond * 100)\n    }\n}\n\nfunc main() {\n    go T()\n    for{}\n}\n")))}f.isMDXComponent=!0}}]);