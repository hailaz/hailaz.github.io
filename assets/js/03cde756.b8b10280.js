"use strict";(self.webpackChunkhailaz_github_io=self.webpackChunkhailaz_github_io||[]).push([[6568],{8396:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>f});const o=JSON.parse('{"id":"learn/go/\u793a\u4f8b/gorun","title":"gorun","description":"\u9650\u5236 go run \u4e2a\u6570","source":"@site/docs/learn/go/\u793a\u4f8b/gorun.mdx","sourceDirName":"learn/go/\u793a\u4f8b","slug":"/learn/go/\u793a\u4f8b/gorun","permalink":"/docs/learn/go/\u793a\u4f8b/gorun","draft":false,"unlisted":false,"editUrl":"https://github.com/hailaz/hailaz.github.io/blob/master/docs/learn/go/\u793a\u4f8b/gorun.mdx","tags":[],"version":"current","frontMatter":{"layout":"post","title":"gorun"},"sidebar":"learn","previous":{"title":"\u6587\u6863\u56e2\u961f Golang \u6700\u4f73\u5b9e\u8df5 & CR \u6848\u4f8b\u96c6","permalink":"/docs/learn/go/\u6587\u7ae0\u6458\u5f55/\u6587\u6863\u56e2\u961fGolangCR\u6848\u4f8b\u96c6&\u6700\u4f73\u5b9e\u8df5"},"next":{"title":"goset","permalink":"/docs/learn/go/\u793a\u4f8b/goset"}}');var u=e(4848),r=e(8453),i=e(9907);const a='package main\n\nimport (\n\t"fmt"\n\t"math/rand"\n\t"time"\n)\n\ntype GoRun struct {\n\tch chan struct{}\n}\n\nfunc NewGoRun(maxRun int) *GoRun {\n\treturn &GoRun{ch: make(chan struct{}, maxRun)}\n}\nfunc (p *GoRun) Done() {\n\t<-p.ch\n}\n\nfunc (p *GoRun) Count() int {\n\treturn len(p.ch)\n}\n\nfunc (p *GoRun) Max() int {\n\treturn cap(p.ch)\n}\n\nfunc (p *GoRun) Run(f func()) {\n\tselect {\n\tcase p.ch <- struct{}{}:\n\t\tgo func(f func()) {\n\t\t\tdefer p.Done()\n\t\t\tf()\n\t\t}(f)\n\tdefault:\n\t\treturn\n\t}\n}\n\nfunc T() {\n\tp := NewGoRun(100)\n\tfor {\n\t\tp.Run(func() {\n\t\t\trand.Seed(time.Now().UnixNano())\n\t\t\tx := rand.Intn(100) //\u751f\u62100-99\u968f\u673a\u6574\u6570\n\t\t\ttime.Sleep(time.Millisecond * time.Duration(x))\n\t\t})\n\t\tfmt.Println(p.Count())\n\t\ttime.Sleep(time.Millisecond * 100)\n\t}\n}\n\nfunc main() {\n\tgo T()\n\tselect {}\n}\n',c='package main\n\nimport (\n\t"fmt"\n\t"math/rand"\n\t"sync"\n\t"time"\n)\n\n// GoRun \u9650\u5236\u5e76\u53d1\u6570\ntype GoRun struct {\n\tmax   int\n\tcount int\n\tsync.Mutex\n}\n\nfunc NewGoRun(max int) *GoRun {\n\treturn &GoRun{max: max}\n}\n\nfunc (p *GoRun) CanRun() bool {\n\tp.Lock()\n\tdefer p.Unlock()\n\tif p.count < p.max {\n\t\tp.count++\n\t\treturn true\n\t}\n\treturn false\n}\nfunc (p *GoRun) Done() {\n\tp.Lock()\n\tdefer p.Unlock()\n\tp.count--\n}\n\nfunc (p *GoRun) Count() int {\n\treturn p.count\n}\n\nfunc (p *GoRun) Run(f func()) {\n\tif !p.CanRun() {\n\t\treturn\n\t}\n\tgo func(f func()) {\n\t\tdefer p.Done()\n\t\tf()\n\t}(f)\n}\n\nfunc T() {\n\tp := NewGoRun(100)\n\tfor {\n\t\tp.Run(func() {\n\t\t\trand.Seed(time.Now().UnixNano())\n\t\t\tx := rand.Intn(p.max * 100) //\u751f\u62100-99\u968f\u673a\u6574\u6570\n\t\t\ttime.Sleep(time.Millisecond * time.Duration(x))\n\t\t})\n\t\tfmt.Println(p.Count())\n\t\ttime.Sleep(time.Millisecond * 100)\n\t}\n}\n\nfunc main() {\n\tgo T()\n\tselect {}\n}\n',l={layout:"post",title:"gorun"},s=void 0,p={},f=[{value:"\u9650\u5236 go run \u4e2a\u6570",id:"\u9650\u5236-go-run-\u4e2a\u6570",level:2},{value:"\u4f7f\u7528\u7ba1\u9053",id:"\u4f7f\u7528\u7ba1\u9053",level:3},{value:"\u4f7f\u7528\u4e92\u65a5\u9501",id:"\u4f7f\u7528\u4e92\u65a5\u9501",level:3}];function d(n){const t={h2:"h2",h3:"h3",...(0,r.R)(),...n.components};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(t.h2,{id:"\u9650\u5236-go-run-\u4e2a\u6570",children:"\u9650\u5236 go run \u4e2a\u6570"}),"\n",(0,u.jsx)(t.h3,{id:"\u4f7f\u7528\u7ba1\u9053",children:"\u4f7f\u7528\u7ba1\u9053"}),"\n","\n",(0,u.jsx)(i.A,{language:"go",children:a}),"\n",(0,u.jsx)(t.h3,{id:"\u4f7f\u7528\u4e92\u65a5\u9501",children:"\u4f7f\u7528\u4e92\u65a5\u9501"}),"\n","\n",(0,u.jsx)(i.A,{language:"go",children:c})]})}function m(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,u.jsx)(t,{...n,children:(0,u.jsx)(d,{...n})}):d(n)}}}]);